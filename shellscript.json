{
	"shabang": {
		"prefix": "shabang",
		"body": [
			"#!/bin/sh"
		]
	},
	"controllo parametri lasco": {
			"prefix": "check params loose",
			"body": [
			"# Controllo che il numero di parametri rientri nella soglia desiderata",
			"if test \\$# -lt 3; then",
				"\t# In tal caso il numero dei parametri non riesntra nell'intervallo desiderato, quindi interrompo l'esecuzione",
				"\techo \"Numero parametri errato. Processo interrotto.\"",
				"\t# Esco specificando un valore intero di errore",
				"\texit 1;",
			"fi"
		]
	},
	"controllo parametri stretto": {
		"prefix": "check params strict",
		"body": [
		"# Controllo che il numero di parametri rientri nella soglia desiderata",
		"if test \\$# -ne 3; then",
			"\t# In tal caso il numero dei parametri non riesntra nell'intervallo desiderato, quindi interrompo l'esecuzione",
			"\techo \"Numero parametri errato. Processo interrotto.\"",
			"\t# Esco specificando un valore intero di errore",
			"\texit 1;",
		"fi"
		]
	},
	"aggiornamento path": {
			"prefix": "update path",
			"body": [
			"# Aggiungo alla variabile d'ambiente PATH il path corrente",
			"PATH=`pwd`:\\$PATH",
			"# Aggiungo le modifiche effettuate alla variabile d'ambiente esportandola",
			"export PATH"
		]
	},
	"controllo numero intero positivo": {
		"prefix": "check int pos",
		"body": [
		"# Controllo se il parametro e' un numero intero",
		"case \\$i in",
		"*[!0-9]*)",
			"\t# In tal caso il parametro non e' un numero intero, quindi interrompo l'esecuzione",
			"\techo \"Il parametro $i non e' un numero intero. Processo interrotto.\"",
			"\t# Esco specificando un valore intero di errore",
			"\texit 5;;",
		"*)",
			"\techo \"Il parametro \\$i e' un numero intero.\"",
			"\t# Controllo se il numero e' positivo",
			"\tif test \"\\$i\" -le 0; then",
				"\t\techo \"Il numero \\$i non e' positivo.\"",
				"\t\t# Esco specificando un valore intero di errore",
				"\t\texit 6",
			"\telse",
				"\t\techo \"Il numero \\$i e' positivo.\"",
			"\tfi;;",
		"esac"
		]
	},
	"controllo stringa": {
		"prefix": "check string",
		"body": [
		"# Controllo che il parametro \\$1 sia una stringa",
		"case \\$1 in",
		"*/*)", 
			"\techo \"Il parametro \\$1 non e' una stringa. Processo interrotto.\"",
			"# Esco specificando un valore intero di errore",
			"\texit 9;;",
		"*)",
			"\techo \"Il parametro \\$1 e' una stringa.\";;",
		"esac"
		]
	},
	"controllo carattere": {
		"prefix": "check char",
		"body": [
		"# Verifico che il parametro \\$1 sia un carattere",
		"case \\$1 in",
			"\t[a-z,A-Z])",
				"\t\techo \"Il primo parametro \\$1 e' un carattere.\";;",
			"\t*)",
				"\t\techo \"Il primo parametro \\$1 non e' un carattere. Processo interrotto.\"",
				"\t\t# Esco specificando un valore intero di errore",
				"\t\texit 2;;",
		"esac"
		]
	},
	"controllo path assoluto": {
		"prefix": "abs path",
		"body": [
			"# Dichiaro una variabile lista per i path assoluti",
			"Q=",
			"",
			"# Scorro i parametri",
			"for G; do",
			"\t# Uso un case per verificare se il parametro e' un path assoluto",
			"\tcase \\$G in",
			"\t/*)",
			    "\t\techo \"Il parametro \\$G e' un path assoluto.\"",
			    "\t\t# Ora verifico l'esistenza della directory e che essa sia traversabile",
			    "\t\tif test -d \"\\$G\" -a -x \"\\$G\"; then",
			        "\t\t\techo \"Il parametro \\$G e' una directory traversabile.\"",
					"\t\t\t# Aggiorno la lista dei path assoluti",
					"\t\t\tQ=\"\\$Q \\$G\"",
			    "\t\telse",
			        "\t\t\techo \"Il parametro \\$G non e' una directory traversabile. Processo interrotto.\"",
			        "\t\t\t# Esco specificando un valore intero di errore",
			        "\t\t\texit 3",
			    "\t\tfi;;",
			"\t*)",
			    "\t\techo \"Il parametro \\$G non e' un path assoluto. Processo interrotto.\"",
			    "\t\t# Esco specificando un valore intero di errore",
			    "\t\texit 2;;",
			"\tesac",
			"done"
		]
	},
	"controllo se il file è leggibile e ha estensione": {
		"prefix": "file read",
		"body": [
			"for F in *; do",
			"\tif test -f \"\\$F\" -a -r \"\\$F\"; then",
    		    "\t\t",
    		"\tfi",
			"done"
		]
	},
	"controllo estensione del file": {
		"prefix": "file ext",
		"body": [
			"# Controllo se il file ha estensione \\$2",
    		"case \\$F in",
    		"*.$2)",
    		    "\techo \"Il file `pwd`/\\$F ha estensione \\$2.\"",
    		    "\techo \"`pwd`/\\$F\" >> \"\\$3\";;",
    		"*)",
    		    "\t;;",
    		"esac"
		]
	},
	"controllo directory vuota": {
		"prefix": "dir empty",
		"body": [
			"# Mi assicuro che la directory non sia vuota",
			"if test \"`ls -A`\" = \"\"; then",
			    "\techo \"La directory \\$1 e' vuota. Directory scartata.\"",
			    "\t# Esco con valore 0 perché cio' non e' un errore",
			    "\texit 0",
			"fi"
		]
	},
	"file temporaneo": {
		"prefix": "temp file",
		"body": [
			"# Creo un file temporaneo",
			"echo \"Creo un file temporaneo.\"",
			"> /tmp/nomiAssoluti",
			"",
			"",
			"",
			"# Elimino il file temporaneo",
			"echo \"Elimino il file temporaneo.\"",
			"rm /tmp/nomiAssoluti"
		]
	},
	"multipli file temporanei": {
		"prefix": "multi-temp file",
		"body": [
			"# Dichiaro una variabile da usare come contatore",
			"n=1",
			"# Scorro la lista in un ciclo che utilizza il contatore n",
			"for G; do",
				"\t# Creo un file temporaneo per ogni gerarchia",
				"\t> /tmp/nomiAssoluti-\\$n",
				"",
			    "\t# Incremento la variabile contatore di 1 a ogni iterazione",
			    "\tn=`expr \"\\$n\" + 1`",
			"done",
			"# Reimposto il contatore al punto di partenza, ovvero a 1",
			"n=1",
			"",
			"",
			"",
			"# Elimino i file temporanei",
			"# Dichiaro un contatore",
			"n=1",
			"for G; do",
				"\t# Elimino i file temporanei per ogni gerarchia",
				"\trm /tmp/nomiAssoluti-\\$n",
				"",
			    "\t# Incremento la variabile contatore di 1 a ogni iterazione",
			    "\tn=`expr \"\\$n\" + 1`",
			"done"
		]
	},
	"input booleano": {
		"prefix": "input bool",
		"body": [
			"# Interrogo l'utente",
			"echo \"Domanda? [S/N]\"",
			"# Leggo la risposta dell'utente",
			"read -r risposta",
			"# Controllo la risposta dell'utente",
			"case \\$risposta in",
			"S*|s*|Y*|y*)",
			    "\t;;",
			"N*|n*)",
			    "\t# Non faccio nulla",
			    "\t;;",
			"*)",
			    "# Risposta non valida",
			    "echo \"Risposta non valida.\";;",
			"esac"
		]
	},
	"input numero": {
		"prefix": "input int",
		"body": [
			"# Interrogo l'utente",
			"echo -n \"Inserisci un numero compreso tra 1 e $N: \"",
			"# Leggo la risposta dell'utente",
			"# Controllo se il parametro e' un numero intero",
			"case \\$X in",
			"*[!0-9]*)",
				"\t# In tal caso il parametro non e' un numero intero, quindi interrompo l'esecuzione",
				"\techo \"Il parametro $X non e' un numero intero. Processo interrotto.\"",
				"\t# Esco specificando un valore intero di errore",
				"\texit 9;;",
			"*)",
				"\techo \"Il parametro \\$X e' un numero intero.\"",
				"\t# Controllo se il numero e' positivo",
				"\tif test \"\\$X\" -le 0; then",
					"\t\techo \"Il numero \\$X non e' positivo.\"",
					"\t\t# Esco specificando un valore intero di errore",
					"\t\texit 10",
				"\telse",
					"\t\techo \"Il numero \\$X e' positivo.\"",
				"\tfi;;",
			"esac"
		]
	},
	"for": {
		"prefix": "for",
		"body": [
			"# Dichiaro una variabile da usare come contatore",
			"n=1",
			"# Scorro la lista in un ciclo che utilizza il contatore n",
			"for G; do",
			    "\t# Incremento la variabile contatore di 1 a ogni iterazione",
			    "\tn=`expr \"\\$n\" + 1`",
			"done",
			"# Reimposto il contatore al punto di partenza, ovvero a 1",
			"n=1"
		]
	},
	"shift": {
		"prefix": "shift",
		"body": [
			"# Shift per scorrere i parametri successivi piu' agevolmente",
			"shift"
		]
	},
	"estrazione linea da file": {
		"prefix": "file getLine",
		"body": [
			"# Estraggo la riga desiderata dal file e la stampo a video",
			"head -n \\$n \\$file | tail -n 1"
		]
	},
	"cd": {
		"prefix": "cd",
		"body": [
			"# Mi sposto nella directory passata come primo parametro",
			"cd \\$1"
		]
	},
	"ciclo per la ricorsione": {
		"prefix": "for recursive",
		"body": [
			"# Cerco directory da esplorare all'interno della directory corrente",
			"for D in *; do",
				"\tif test -d \"\\$D\" -a -x \"\\$D\"; then",
					"\t\t# Chiamo lo script ricorsivo entrando nella directory",
					"\t\tFCR.sh \"\\$1/\\$D\" \"\\$2\" \"\\$3\"",
				"\tfi",
			"done"
		]
	},
	"ciclo di scorrimento delle gerarchie": {
		"prefix": "for hierarchy",
		"body": [
			"# Scorro la lista di gerarchie",
			"for G in \\$Q; do",
			    "\t# Chiamo lo script ricorsivo",
			    "\tFCR.sh \"\\$G\" \"\\$\" \"/tmp/nomiAssoluti\"",
			"done"
		]
	}
}